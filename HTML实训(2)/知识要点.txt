1、行内元素
<span> <i> <b> <a> <input> <img> <button>
等都是行内元素，行内元素不能设置宽度和高度，它的长度和高度是由内容撑开的，若无内容，该元素的长和高就是为0

2、块级元素
占据一整行的元素称为块级元素，如<div> <p> <h1> <h6> <section> <footer>
行内元素也可以转变成块级元素，在行内元素的css样式里加上display：block，那么该行内元素就会变成占据一整行的块级元素

3、行内块级元素
行内块级元素就是可以设置宽度和高度的行内的元素，在行内元素的css样式里加上display：inline-block就可以了
如果想要块级元素变成行内块级元素，也是加上display：inline-block

4、层级
html都是由一个个盒模型构造而成的，盒模型与盒模型之间的关系有父子关系和兄弟级关系，一个元素从开始标签到结束标签包裹着的元素称为该元素的子元素
一个元素由<>开始，到</>结束


5、html属性
属性一般都写在元素的开始标签里<>,如class=""、href=""、src=""，属性是用于描述该元素的一个标识

6、html链接/target属性
链接一般都用<a>标签，可以实现点击跳转到别的链接的操作，href属性代表点击该元素后会跳转到的链接地址，target属性表示跳转方式
跳转方式一般有两种，一种是在当前页面跳转，a标签的target一般都默认为在当前页面跳转，因为不设置target值就表示当前页面跳转
另一种是在新页面跳转，设置<a>标签的属性target="_blank"就表示为该链接会在新页面打开

7、html图像
需要在网页里插入一张图片的话就需要使用<img src="">标签，src的值就是该图片的路径

8、html列表
列表有两种，有序列表<ol></ol> 和无序列表<ul></ul>,ol和ul都是装载列表的盒子，真正的内容是盒子里面的<li><li>，
列表都会有自己的默认样式，也就是列表前面会有一个圆点，如果我们不需要那个圆点我们就在ul的css样子里写list-style:none
<li>是块级元素，所以会占一整行，因为我们看到导航都是从左往右排开的，所以我们需要让li从左往右排开，有两种方式
一种是直接让li变成行内块级元素，在li的css里加上display：inline-block
另一种就是让li从左往右浮动


css
1、定位
一、fixed 浮动定位
相对于浏览器窗口定位的,并且会脱离文档流，也就是说，html文档不需要给他留位置，他会跳出去有自己的位置
二、relative 相对定位
相对于元素自己的位置进行偏移，并且浏览器会保留自己的位置，没有脱离文档流
三、absolute 绝对定位
相对于拥有定位元素（fixed、relate、absolute、sticky）的父级进行定位，如果他的所有父级都没有定位元素，那他就相对于html窗口进行定位，absolute也是脱离文档流的，也就是浏览器不会保留他的位置
四、sticky 粘性定位
sticky 英文字面意思是粘，粘贴，所以可以把它称之为粘性定位。
position: sticky; 基于用户的滚动位置来定位。
粘性定位的元素是依赖于用户的滚动，在 position:relative 与 position:fixed 定位之间切换。
它的行为就像 position:relative; 而当页面滚动超出目标区域时，它的表现就像 position:fixed;，它会固定在目标位置。 
元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。
这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。

2、浮动
比如一个列表，我们需要做成导航的形式让列表是从左往右排开的，就需要用到浮动，比如我们需要让li浮动，就在li的css样式里加float：left
但是浮动的元素会产生一个副作用就是它父及的高度会受到影响，为了消除这个影响，我们就需要消除浮动的副作用，就是在父级的css样式里面写overfloat：hiddent，消除浮动的方式不止这一种，后续我们再继续学习

3、overflow

4、display
display:block（元素块级化）
display:inline-block (元素行内块级化)
display:inline(元素变成行内元素)
display:none(元素消失)

5、尺寸

6、优先级
7、文本
8、分组和嵌套
9、组合选择符
10、背景